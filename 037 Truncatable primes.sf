#!/usr/bin/ruby

# Author: Daniel "Trizen" È˜uteu
# License: GPLv3
# Website: https://github.com/trizen

# Find the sum of the only eleven primes that are both truncatable from left to right and right to left.

# NOTE: 2, 3, 5, and 7 are not considered to be truncatable primes.

# https://projecteuler.net/problem=37

# Runtime: 2.395s

func is_truncatable_prime(n) {

    n.is_prime || return false

    var orig = n
    var l = n.len

    (l-1).times {
        n //= 10                          # /
        n.is_prime || return false
    }

    n = orig;
    var p = 10**(l-1)
    (l-1).times { |i|
         n -= (orig.digit(-i - 1) * p)
         n.is_prime || return false
         p //= 10                         # /
    }

    return true
}

var sum = 0
var count = 0
var p = 11

loop {
    if (is_truncatable_prime(p)) {
        say p
        sum += p
        ++count == 11 && break
    }
    p.next_prime!
}

say "Sum: #{sum}"
