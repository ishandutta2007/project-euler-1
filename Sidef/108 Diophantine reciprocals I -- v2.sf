#!/usr/bin/ruby

# Daniel "Trizen" È˜uteu
# Date: 15 May 2021
# https://github.com/trizen

# Diophantine reciprocals I
# https://projecteuler.net/problem=108

# See also:
#   https://oeis.org/A018892

# Runtime: 0.192s

func solve(threshold, least_solution = Inf, k = 1, max_a = Inf, solutions = 1, n = 1){

    if (solutions > threshold) {
        return n
    }

    var p = k.prime

    for a in (1 .. max_a) {
        n *= p
        break if (n > least_solution)
        least_solution = __FUNC__(threshold, least_solution, k+1, a, solutions * (2*a + 1), n)
    }

    return least_solution
}

var LIMIT = 1000
say solve(2*LIMIT + 1)
